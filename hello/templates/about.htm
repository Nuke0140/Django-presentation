{%extends 'base.html'%}

{%block title%}About{%endblock title%}


{% block body%}


    <main class="container w-100 p-3">
      <div class="p-4 p-md-5 mb-4 text-white rounded bg-secondary">
        <div class="col-md-6 px-0">
          <h1 class="display-4 fst-italic">Django</h1>
          <p class="lead my-3">Django is a high-level Python web framework that enables rapid development of secure and maintainable websites. Built by experienced developers, Django takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel. It is free and open source, has a thriving and active community, great documentation, and many options for free and paid-for support.

        </div>
      </div>
    
      <div class="row mb-2">
        <div class="col-md-6">
          <div class="row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
            <div class="col p-4 d-flex flex-column position-static">
              <strong class="d-inline-block mb-2 text-primary"><h3>CheatSheet</h3></strong>
              <h3 class="mb-0"></h3>
              <div class="mb-1 text-muted"></div>
              <p class="card-text mb-auto">Django Cheat Sheet tries to provide a basic reference for beginner and advanced developers, lower the entry barrier for newcomers, and help veterans refresh the old tricks. Django is a high-level Python Web framework that encourages rapid development </p>
              <a href="/cheatsheet" class="stretched-link" style="">Continue reading</a>
            </div>
            <div class="col-auto d-none d-lg-block">
              <img class="mb-5" src="static/razer_green_background-wallpaper-1920x1080.jpg" alt="Illustration" style="width: 14.5rem;">
    
            </div>
          </div>
        </div>
        <div class="col-md-6">
          <div class="row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
            <div class="col p-4 d-flex flex-column position-static">
              <strong class="d-inline-block mb-2 text-success"><h3>Django Documentation</h3></strong>
              
              <p class="mb-auto">We place a high importance on consistency and readability of documentation. After all, Django was created in a journalism environment! So we treat our documentation like we treat our code: we aim to improve it as often as possible. Getting the raw documentation</p>
              <a href="static/django.pdf" class="stretched-link" style="">Continue reading</a>
            </div>
            <div class="col-auto d-none d-lg-block">
              <img class="mb-5" src="static/razer_green_background-wallpaper-1920x1080.jpg" alt="Illustration" style="width: 14.5rem;">
    
            </div>
          </div>
        </div>
      </div>
    
      <div class="row g-5">
        <div class="col-md-8">
          <h3 class="pb-4 mb-4 fst-italic border-bottom">
            You need basic understanding to work in back-end properly
          </h3>
    
          <article class="blog-post ">
            <h2 class="blog-post-title">Structuring the web with HTML</h2>
            <br>
            <br>
    
           
            </blockquote>
            <div><p>This topic contains the following modules, in a suggested order for working through them. You should definitely start with the first one.</p>
              <dl>
                <dt><a href="">Introduction to HTML</a></dt>
                <dd>
                  <p>This module sets the stage, getting you used to important concepts and syntax, looking at applying HTML to text, how&nbsp;to create hyperlinks, and how to use HTML to structure a webpage.</p>
                </dd>
                <dt><a href="">Multimedia and embedding</a></dt>
                <dd>
                  <p>This module explores how to use HTML to include multimedia in your web pages, including the different ways that images can be included, and how to&nbsp;embed video, audio, and even entire other webpages.</p>
                </dd>
                <dt><a href="">HTML tables</a></dt>
                <dd>
                  <p>Representing tabular data on a webpage in an understandable, <a href="">accessible</a> way can be a challenge. This module covers basic table markup, along with more complex features such as implementing captions and summaries.</p>
                </dd>
              </dl></div>
            <br>
            <br>
           
            <h2><span> To style HTML using CSS</span></h2>
            <br>
            
            <dl>
              <dt><a href="">CSS first steps</a></dt>
              <dd>
                <p>CSS (Cascading Style Sheets) is used to style and lay out web pages — for example, to alter the font, color, size, and spacing of your content, split it into multiple columns, or add animations and other decorative features. This module provides a gentle beginning to your path towards CSS mastery with the basics of how it works, what the syntax looks like, and how you can start using it to add styling to HTML.</p>
              </dd>
              <dt><a href="">CSS building blocks</a></dt>
              <dd>
                <p>This module carries on where <a href="">CSS first steps</a> left off — now you've gained familiarity with the language and its syntax, and got some basic experience with using it, its time to dive a bit deeper. This module looks at the cascade and inheritance, all the selector types we have available, units, sizing, styling backgrounds and borders, debugging, and lots more.</p>
                <p>The aim here is to provide you with a toolkit for writing competent CSS and help you understand all the essential theory, before moving on to more specific disciplines like <a href="">text styling</a> and <a href="">CSS layout</a>.</p>
              </dd>
              <dt><a href="">Styling text</a></dt>
              <dd>
                <p>With the basics of the CSS language covered, the next CSS topic for you to concentrate on is styling text — one of the most common things you'll do with CSS. Here we look at text styling fundamentals, including setting font, boldness, italics, line and letter spacing, drop shadows and other text features. We round off the module by looking at applying custom fonts to your page, and styling lists and links.</p>
              </dd>
              <dt><a href="">CSS layout</a></dt>
              <dd>
                <p>At this point we've already looked at CSS fundamentals, how to style text, and how to style and manipulate the boxes that your content sits inside. Now it's time to look at how to place your boxes in the right place in relation to the viewport, and one another. We have covered the necessary prerequisites so we can now dive deep into CSS layout, looking at different display settings, modern layout tools like flexbox, CSS grid, and positioning, and some of the legacy techniques you might still want to know about.</p>
              </dd>
            </dl>
            <br>
            <br>
            <h2>JavaScript — Dynamic client-side scripting</h2>
            <br>
            <dl>
              <dt><a href="">JavaScript first steps</a></dt>
              <dd>
                <p>In our first JavaScript module, we first answer some fundamental questions such as "what is JavaScript?", "what does it look like?", and "what can it do?", before moving on to taking you through your first practical experience of writing JavaScript. After that, we discuss some key JavaScript features in detail, such as variables, strings, numbers and arrays.</p>
              </dd>
              <dt><a href="s">JavaScript building blocks</a></dt>
              <dd>
                <p>In this module, we continue our coverage of all JavaScript's key fundamental features, turning our attention to commonly-encountered types of code block such as conditional statements, loops, functions, and events. You've seen this stuff already in the course, but only in passing — here we'll discuss it all explicitly.</p>
              </dd>
              <dt><a href="">Introducing JavaScript objects</a></dt>
              <dd>
                <p>In JavaScript, most things are objects, from core JavaScript features like strings and arrays to the browser APIs built on top of JavaScript. You can even create your own objects to encapsulate related functions and variables into efficient packages. The object-oriented nature of JavaScript is important to understand if you want to go further with your knowledge of the language and write more efficient code, therefore we've provided this module to help you. Here we teach object theory and syntax in detail, look at how to create your own objects, and explain what JSON data is and how to work with it.</p>
              </dd>
              <dt><a href="">Asynchronous JavaScript</a></dt>
              <dd>
                <p>In this module we take a look at asynchronous JavaScript, why it is important, and how it can be used to effectively handle potential blocking operations such as fetching resources from a server.</p>
              </dd>
              <dt><a href="">Client-side web APIs</a></dt>
              <dd>
                <p>When writing client-side JavaScript for web sites or applications, you won't go very far before you start to use APIs — interfaces for manipulating different aspects of the browser and operating system the site is running on, or even data from other web sites or services. In this module we will explore what APIs are, and how to use some of the most common APIs you'll come across often in your development work.</p>
              </dd>
            </dl>
            
          </article>
          </div>
    
         
    </main>
    
    <footer class="blog-footer">
      <p>Blog template built for <a href="">DjangoInfo</a> by <a href="">Nuke</a>.</p>
      <p>
        <a href="#">Back to top</a>
      </p>
    </footer>
    
    
        
{% endblock body%}